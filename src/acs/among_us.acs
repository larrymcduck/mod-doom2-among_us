#library "among_us"
#include "zcommon.acs"

int weapon_count = 14;
str random_weapon[14] = {
  "AmongUsChainsaw",
  "AmongUsShotgun",
  "AmongUsSuperShotgun",
  "AmongUsChaingun",
  "AmongUsRocketLauncher",
  "AmongUsPlasmaRifle",
  "AmongUsBFG9000",
  "BHGen",
  "AmongUsM6d",
  "Redeemer",
  "M40Rifle",
  "AmongUsLightningGun",
  "AmongUsFirebolt",
  "AmongUsFrostbite"
};

int ammo_count = 11;
str random_ammo[11] = {
  "AmongUsClip",
  "AmongUsClipBox",
  "AmongUsShell",
  "AmongUsShellBox",
  "AmongUsRocketAmmo",
  "AmongUsRocketBox",
  "AmongUsCell",
  "AmongUsCellPack",
  "Warammo",
  "M40762Ammo",
  "M40762AmmoBox"
};

int powerup_count = 7;
str random_powerup[7] = {
  "AmongUsInvisibility",
  "AmongUsLight",
  "AmongUsSpeed",
  "AmongUsMegaHealth",
  "AmongUsRapidFire",
  "AmongUsDoubleDamage",
  "AmongUsProtection"
};

int inventory_count = 1;
str random_inventory[1] = {
  "AmongUsChickenator"
};

script "player_enter" ENTER
{
	ACS_NamedExecuteAlways("player_enter_or_respawn", 0);
}

script "player_respawn" RESPAWN
{
	ACS_NamedExecuteAlways("player_enter_or_respawn", 0);
}

script "player_enter_or_respawn" (void)
{
	// remove dead body if it exists, set player tid
	Thing_Remove(PlayerNumber() + 2000);
	Thing_ChangeTID(0, PlayerNumber() + 1000);

	if (GetCVar("amongus_gametype") == 1)
	{
		GiveInventory("AmongUsFist", 1);
		GiveInventory("AmongUsPistol", 1);
		GiveInventory("AmongUsClip", 5);

        if (GetCVar("amongus_deathmatch_lockdoors") == 1)
        {
            GiveInventory("LockCafeteria", 1);
            GiveInventory("LockStorage", 1);
            GiveInventory("LockElectrical", 1);
            GiveInventory("LockLowerEngine", 1);
            GiveInventory("LockSecurity", 1);
            GiveInventory("LockUpperEngine", 1);
            GiveInventory("LockMedBay", 1);
        }
	}
	else
	{
		GiveInventory("Crewmate", 1);
	}
}

script "player_death" DEATH
{
	// for removing sprites of killed players
	Thing_ChangeTID(0, PlayerNumber() + 2000);
}

script "use_vent" (int destination_vent)
{
	if (CheckInventory("Vented_Seconds"))
	{
		terminate;
	}

	int current_x = GetActorX(0);
	int current_y = GetActorY(0);
	
	Thing_Move(0, destination_vent, 1);

	if (current_x == GetActorX(0) && current_y == GetActorY(0))
	{
		print(s:"Failed to vent!");
		terminate;
	}

	int vent_wait_seconds = GetCVar("amongus_vent_wait_seconds");
	GiveInventory("Vented_Seconds", vent_wait_seconds);	
	
	while (vent_wait_seconds > 0)
	{
		Delay(35);
		TakeInventory("Vented_Seconds", 1);
		vent_wait_seconds--;
	}
}

script "item_giver" (int item_type)
{
  int item_index = 0;
  str selected_item = "";
  
  int x = GetActorX(0);
  int y = GetActorY(0);
  int z = GetActorZ(0);
  
  switch (item_type)
  {
    case 0:
	  item_index = Random(0, weapon_count - 1);
      selected_item = random_weapon[item_index];
	  break;
	
	case 1:
	  item_index = Random(0, ammo_count - 1);
      selected_item = random_ammo[item_index];
	  break;
	
	case 2:
	  item_index = Random(0, powerup_count - 1);
      selected_item = random_powerup[item_index];
	  break;
	
	case 3:
	  item_index = Random(0, inventory_count - 1);
      selected_item = random_inventory[item_index];
	  break;
	
  }

  SpawnForced(selected_item, x, y, z, 124, 0);
}

script 999 (void)
{
  str playerStepSound = "PlayerStepMetal";
  switch (CheckInventory("PlayerStepSound"))
  {
    case 1:
      playerStepSound = "PlayerStepTile";
      break;
    case 2:
      playerStepSound = "";
      break;
  }

  if ((GetActorZ(0) - GetActorFloorZ(0)) == 0.0)
  {
    PlaySound(0, playerStepSound, CHAN_BODY, 0.3);
  }
}

script 998 (void)
{
  str shootingState = "Shooting";
  if (CheckWeapon("AmongUsFist"))
  {
    shootingState = "Punching";
  }
  if (CheckWeapon("AmongUsPistol") && CheckInventory("AmongUsClip") >= 1)
  {
    shootingState = "DoomPistol";
  }
  if (CheckWeapon("AmongUsShotgun") && CheckInventory("AmongUsShell") >= 1)
  {
    shootingState = "DoomShotgun";
  }

  SetActorState(0, shootingState, TRUE);
}
